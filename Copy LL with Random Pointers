class Solution {
public:
    void insertCopyInBetween(Node* head){
        Node* temp = head;
        while(temp != nullptr){
            Node* nextEle = temp->next;
            Node* copy = new Node(temp->val);

            copy->next = nextEle;
            temp->next = copy;

            temp = nextEle;
        }
    }

    void connectRandomPointers(Node* head) {
        Node* temp = head;
        while(temp != nullptr){
            Node* copyNode = temp->next;
            if(temp->random){
                copyNode->random = temp->random->next;
            }
            else{
                copyNode->random = nullptr;
            }
            temp = temp->next->next;
        }
    }
    Node* getDeepCopyList(Node* head) {
        Node* temp = head;
        Node* dummyNode = new Node(-1);
        Node* res = dummyNode;

        while(temp != nullptr) {
            //creating new list
            res->next = temp->next;
            res = res->next;

            //disconnecting and going back to initial state of LL
            temp->next = temp->next->next;
            temp = temp->next;
        }
        return dummyNode->next;
    }
    Node* copyRandomList(Node* head) {
        insertCopyInBetween(head);
        connectRandomPointers(head);
        return getDeepCopyList(head);
    }
};
