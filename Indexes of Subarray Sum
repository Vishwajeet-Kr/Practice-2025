class Solution {
  public:
    vector<int> subarraySum(vector<int> &arr, int d) {
       int i = 0, j = 0;
       
       int n = arr.size();
       
        //long long s =d;
        long long sum = arr[0];
        
        while(j < n) {
            if(sum> d) {
                sum -= arr[i];
                i++;
            }
            else if (sum < d) {
                j++;
                if (j < n) {
                    sum += arr[j];
                }
            } else {
                return {i+1, j+1};
                }
            }
        return {-1};
    }
};

//{ Driver Code Starts.

int main() {
    int t;
    cin >> t;
    cin.ignore();
    while (t--) {
        vector<int> arr;
        int d;
        string input;

        getline(cin, input);
        stringstream ss(input);
        int number;
        while (ss >> number) {
            arr.push_back(number);
        }

        cin >> d;
        cin.ignore();

        Solution ob;
        vector<int> result = ob.subarraySum(arr, d);
        for (int i : result) {
            cout << i << " ";
        }
        cout << "\n~\n";
    }
    return 0;
}

// } Driver Code Ends
