class Solution {
public:
    void nextPermutation(vector<int>& nums) {
        int n = nums.size();
        int index = -1;

        //Find the first decreasing element from the right
        for(int i = n-2;i>=0;i--){
            if(nums[i] < nums[i+1]){
                index = i;
                break;
            }
        }

        //If no such element is found, reverse the entire array
        if(index == -1){
            std::reverse(nums.begin(),nums.end());
            return;
        }

        //Find the smallest element larger than nums[index] to swap
        for(int i = n-1; i>= index; i--){
            if(nums[i] > nums[index]){
                std::swap(nums[i], nums[index]);
                break;
            }
        }

        // Reverse the part after index to get the next permutation
        std::reverse(nums.begin() + index + 1, nums.end());
        
    }
};
